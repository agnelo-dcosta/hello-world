import java.util.LinkedList;

public class Tries{
    int val = 0;
    Tries[] children = new Tries[26];


    static Tries[] _dictionary = new Tries[26];

    public static void add(String s){
    	Tries[] head = _dictionary;
        for (int i = 0; i<s.length(); i++){
            if (head[s.charAt(i)-'a'] == null){
                head[s.charAt(i)-'a'] = new Tries();
            } 
            head[s.charAt(i)-'a'].val++;
            head = head[s.charAt(i)-'a'].children;
        }
    }

	public static void find(String s){
	    Tries[] head = _dictionary;
	    int numberOfContacts = 0;
	    for (int i = 0; i<s.length(); i++){
	        if (head[s.charAt(i)-'a'] == null){
	            System.out.println(0);
	            return;
	        }
	        numberOfContacts = head[s.charAt(i)-'a'].val;
	        head = head[s.charAt(i)-'a'].children;
	    }
	    System.out.println(numberOfContacts);
	}
	
	public static void print(){
	    Tries[] head = _dictionary;
	    int numberOfContacts = 0;
	    for (int i = 0; i<head.length; i++){
	        if (head['a' - i].val == 0){
	           // System.out.println(0);
	           
	        }
	        else{
	        	char temp = (char) ('a' + i);
	        
	        	System.out.println(temp);
	        }
	      
	    }
	    System.out.println(numberOfContacts);
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//System.out.println("a " + getChar('a') + " m " + getChar('m') + " z " + getChar('z'));
		add("hack");
		add("ackerrank"); 
		add( "hackerrank");
		add( "autogeneratedmethodstub"); 
		add( "tnodesstreamforeach");
		add( "automethodstub"); 
		add( "tnodesforeach");
		add( "generatedstub");
		add( "streamforeach");
		
		print();
		
		
		System.out.println("hac ");find( "hac");
		
		System.out.println("ackerrank ");find( "ackerrank");
		
		System.out.println("auto");find( "auto");
		
//		   if(op.equals("add")) add(contact);
//           if(op.equals("find")) System.out.println(count(contact));
//      }
	}

}
